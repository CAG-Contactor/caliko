<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>au.edu.federation.caliko</groupId>
  <artifactId>caliko-aggregate</artifactId>
  <packaging>pom</packaging>
  <version>1.3.1-SNAPSHOT</version>                     <!-- This is the version of the library as a whole - build.txt is updated from this. -->
  <name>Caliko library Aggregate POM</name>
  <description>POM to build the Caliko library including the visualisation component, demo application, source and documentation archives.</description>
  <url>https://github.com/FedUni/caliko</url>

  <properties>
	<maven-compiler-plugin.source>1.8</maven-compiler-plugin.source>
	<maven-compiler-plugin.target>1.8</maven-compiler-plugin.target>  
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <skipTests>true</skipTests>
  </properties>

  <!-- Build these modules in this specific order - the order is important because 'caliko' is
       standalone, 'caliko-visualisation' depends on 'caliko', and 'caliko-demo' depends on both. -->
  <modules>
    <module>caliko</module>
    <module>caliko-visualisation</module>
    <module>caliko-demo</module>
  </modules>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>au.edu.federation.caliko</groupId>
        <artifactId>caliko</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>au.edu.federation.caliko.visualisation</groupId>
        <artifactId>caliko-visualisation</artifactId>
        <version>${project.version}</version>
      </dependency>        
    </dependencies>
  </dependencyManagement>
    
  <build>
    <pluginManagement>
   	  <plugins>
	      <plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-compiler-plugin</artifactId>
	        <version>3.3</version>
	      </plugin>    	
      </plugins>
    </pluginManagement>
   
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${maven-compiler-plugin.source}</source>
          <target>${maven-compiler-plugin.target}</target>
        </configuration>
      </plugin>    

      <!-- Build aggregated javadoc -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.10.4</version>   
        <configuration>
          <aggregate>true</aggregate>
          <quiet>true</quiet>
          <reportOutputDirectory>${project.build.directory}</reportOutputDirectory>          
        </configuration>     
        <executions>
          <execution>
            <phase>package</phase>            
            <id>aggregate</id>
            <goals>
              <goal>aggregate-jar</goal>              
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Assemble items into zip files -->
<!--       <plugin> -->
<!--         <artifactId>maven-assembly-plugin</artifactId> -->
<!--         <version>2.6</version> -->
<!--         <executions> -->

<!--           Javadoc into zip  -->
<!--           <execution> -->
<!--             <id>docs-assemble</id> -->
<!--             <phase>compile</phase> -->
<!--             <configuration> -->
<!--               <finalName>javadoc</finalName> -->
<!--               <appendAssemblyId>false</appendAssemblyId> -->
<!--               <descriptors> -->
<!--                 <descriptor>doc-bin.xml</descriptor> -->
<!--               </descriptors> -->
<!--             <outputDirectory>${project.build.outputDirectory}/doc</outputDirectory> -->
<!--             </configuration> -->
<!--             <goals> -->
<!--               <goal>single</goal> -->
<!--             </goals>             -->
<!--           </execution> -->

<!--           Source code into zip -->
<!--           <execution> -->
<!--             <id>source-assemble</id> -->
<!--             <phase>compile</phase> -->
<!--             <configuration> -->
<!--               <finalName>src</finalName> -->
<!--               <appendAssemblyId>false</appendAssemblyId> -->
<!--               <descriptors> -->
<!--                 <descriptor>src-bin.xml</descriptor> -->
<!--               </descriptors> -->
<!--             <outputDirectory>${project.build.outputDirectory}</outputDirectory> -->
<!--             </configuration> -->
<!--             <goals> -->
<!--               <goal>single</goal> -->
<!--             </goals>             -->
<!--           </execution> -->

<!--           Entire RELEASE folder into final caliko.zip -->
<!--           <execution> -->
<!--             <id>create-release-zip-archive</id> -->
<!--             <phase>package</phase> -->
<!--             <configuration> -->
<!--               <finalName>caliko</finalName> -->
<!--               <appendAssemblyId>false</appendAssemblyId> -->
<!--               <outputDirectory>${project.basedir}</outputDirectory> -->
<!--               <descriptors> -->
<!--                 <descriptor>lib-bin.xml</descriptor> -->
<!--               </descriptors> -->
<!--             </configuration> -->
<!--             <goals> -->
<!--               <goal>single</goal> -->
<!--             </goals>             -->
<!--           </execution> -->

<!--         </executions>         -->
<!--       </plugin> -->

      <!-- Copy resources to final RELEASE folder -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.7</version>
        <executions>

          <!-- Copy library jars to RELEASE/jar -->
          <execution>
            <id>copy-library-jars</id>
            <phase>compile</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.outputDirectory}/jar</outputDirectory>
              <resources>
                <resource>
                  <directory>caliko/target</directory>
                  <includes>
                    <include>**/*.jar</include>
                  </includes>
                </resource>
                <resource>
                  <directory>caliko-visualisation/target</directory>
                  <includes>
                    <include>**/*.jar</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>

          <!-- Copy demo jars to RELEASE/demo -->
          <execution>
            <id>copy-demo-jar</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.outputDirectory}/demo</outputDirectory>
              <resources>
                <resource>
                  <directory>caliko-demo/target</directory>
                  <includes>
                    <include>**/*.jar</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>

          <!-- Place user documentation into doc folder -->
          <execution>
            <id>copy-user-docs</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.outputDirectory}/doc</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}</directory>
                  <includes>
                    <include>caliko-user-guide.pdf</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>

          <!-- Update the build.txt stamp from the version of this POM -->
          <execution>
            <id>update-build-stamp</id>
            <phase>compile</phase>
            <goals>
              <goal>resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.outputDirectory}</outputDirectory>
              <resources>
                <resource>
                  <filtering>true</filtering>
                  <directory>.</directory>
                  <includes>
                    <include>build.txt</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>

        </executions>
      </plugin>

    </plugins>
  </build>

</project>
